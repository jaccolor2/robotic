#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int is_alpha(char c)
{
    if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
        return (1);
    return (0);
}

int palindrome(const char *s)
{
    int i;
    int j;

    if (!s)
        return (0);
    i = 0;
    j = strlen(s) - 1;
    while (i < j) {
        if (!is_alpha(s[i])) {
            i++;
            continue;
        }
        if (!is_alpha(s[j])) {
            j--;
            continue;
        }
        if (s[i] != s[j])
            return (0);
        i++;
        j--;
    }
    return (1);
}

int main(int ac, char **av)
{
    if (ac == 2) {
        if (palindrome(av[1]))
            printf("%s is a palindrome\n", av[1]);
        else
            printf("%s is not a palindrome\n", av[1]);
    }
    else
        printf("usage: %s \"word\"\n", av[0]);
    return (0);
}
```

## palindrome_test.sh

```sh
#!/bin/bash

gcc -Wall -Wextra -Werror palindrome.c -o palindrome

if [[ `./palindrome ""` != "\"\" is a palindrome" ]]
then
	echo "test \"\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "allo"` != "\"allo\" is a palindrome" ]]
then
	echo "test \"allo\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "1"` != "\"1\" is a palindrome" ]]
then
	echo "test \"1\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test"` != "\"test\" is not a palindrome" ]]
then
	echo "test \"test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test1"` != "\"test1\" is not a palindrome" ]]
then
	echo "test \"test1\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "1test1"` != "\"1test1\" is a palindrome" ]]
then
	echo "test \"1test1\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test"` != "\"test-test\" is a palindrome" ]]
then
	echo "test \"test-test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test-test"` != "\"test-test-test\" is not a palindrome" ]]
then
	echo "test \"test-test-test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test-test"` != "\"test-test-test\" is not a palindrome" ]]
then
	echo "test \"test-test-test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test-test-test"` != "\"test-test-test-test\" is not a palindrome" ]]
then
	echo "test \"test-test-test-test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test-test-test-test"` != "\"test-test-test-test-test\" is not a palindrome" ]]
then
	echo "test \"test-test-test-test-test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test-test-test-test-test"` != "\"test-test-test-test-test-test\" is not a palindrome" ]]
then
	echo "test \"test-test-test-test-test-test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test-test-test-test-test-test"` != "\"test-test-test-test-test-test-test\" is not a palindrome" ]]
then
	echo "test \"test-test-test-test-test-test-test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test-test-test-test-test-test-test"` != "\"test-test-test-test-test-test-test-test\" is not a palindrome" ]]
then
	echo "test \"test-test-test-test-test-test-test-test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test-test-test-test-test-test-test-test"` != "\"test-test-test-test-test-test-test-test-test\" is not a palindrome" ]]
then
	echo "test \"test-test-test-test-test-test-test-test-test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test-test-test-test-test-test-test-test-test"` != "\"test-test-test-test-test-test-test-test-test-test\" is not a palindrome" ]]
then
	echo "test \"test-test-test-test-test-test-test-test-test-test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test-test-test-test-test-test-test-test-test-test"` != "\"test-test-test-test-test-test-test-test-test-test-test\" is not a palindrome" ]]
then
	echo "test \"test-test-test-test-test-test-test-test-test-test-test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test-test-test-test-test-test-test-test-test-test-test"` != "\"test-test-test-test-test-test-test-test-test-test-test-test\" is not a palindrome" ]]
then
	echo "test \"test-test-test-test-test-test-test-test-test-test-test-test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test-test-test-test-test-test-test-test-test-test-test-test"` != "\"test-test-test-test-test-test-test-test-test-test-test-test-test-test\" is not a palindrome" ]]
then
	echo "test \"test-test-test-test-test-test-test-test-test-test-test-test-test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test-test-test-test-test-test-test-test-test-test-test-test-test"` != "\"test-test-test-test-test-test-test-test-test-test-test-test-test-test-test\" is not a palindrome" ]]
then
	echo "test \"test-test-test-test-test-test-test-test-test-test-test-test-test-test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test-test-test-test-test-test-test-test-test-test-test-test-test-test"` != "\"test-test-test-test-test-test-test-test-test-test-test-test-test-test-test-test\" is not a palindrome" ]]
then
	echo "test \"test-test-test-test-test-test-test-test-test-test-test-test-test-test-test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test-test-test-test-test-test-test-test-test-test-test-test-test-test-test"` != "\"test-test-test-test-test-test-test-test-test-test-test-test-test-test-test-test-test\" is not a palindrome" ]]
then
	echo "test \"test-test-test-test-test-test-test-test-test-test-test-test-test-test-test-test\""
	echo "return" $?
	exit 1
fi

if [[ `./palindrome "test-test-test-test-test-test-test-test-test-test-test-test-test-test-test-test-test"` != "\"test-test-test-test-test-test-test-test-test-test-test-test-test-test-test-test-test-test\" is not a palindrome" ]]
then
	echo "test \"test-test-test-test-test-test-test-test-test-test-test-test-test-test-test-test-test\""
	echo "return" $?
	exit 1
fi